version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: mauna_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: mauna
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: "--auth-host=trust --auth-local=trust"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"
    networks:
      - mauna_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mauna"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mauna_app
    restart: unless-stopped
    environment:
      - DATABASE_HOSTNAME=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=mauna
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - SECRET_KEY=mauna_secret_key_2024_change_in_production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - JWT_EXPIRATION=3600
      - ENVIRONMENT=development
      - DEBUG=True
      - RATE_LIMIT=3600
      - ALLOWED_ORIGINS=*
    volumes:
      - storage_data:/app/src/storage
    ports:
      - "8888:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mauna_network
    # ðŸ”§ FIX: Disable health check temporarily
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 60s

volumes:
  postgres_data:
    driver: local
  storage_data:
    driver: local

networks:
  mauna_network:
    driver: bridge
